#!/bin/bash
###############################################################################
#
# Script: installer
# Purpose: This script sequences a series of scripts to install, it's the driver that cues up and runs each script. 
#
###############################################################################
#
[ ! -f settings ] && {
	echo -e "\n${FG_RED}================================================================================${FG_GREEN}"
	echo -e "${FG_RED}= ERROR${FG_GREEN}: Could not find configuration (${FG_CYAN}$2${FG_GREEN}).";
	echo -e "${FG_RED}================================================================================${FG_GREEN}\n"
	exit
}

source settings
source constants
source functions;

export PROP=0;
export ACTION;
export PACKAGE;

que=(
	"user" 
	"ntp"
	"network"
	"httpd"
	"mariadb"
	"php"
);
export start_time=$(date +%s)

action=$(basename $0)
[ "$action" == "installer" ] && { action=$1; packages="${que[@]}"; } || { packages="$@"; }

[ "$action" == "install" ] || [ "$action" == "remove" ] && {

	case $action in 
		install)		ACTION=$(($ACTION|$INSTALL)); ;;
		remove)	ACTION=$(($ACTION|$REMOVE)); ;;
	esac

	[ ! -d ../logs ] && mkdir ../logs;
    
	[ "$(basename $0)" == "installer" ] && initialise

	for PACKAGE in $packages; do
		[ "`is_installed base/$PACKAGE`" == "0" ] && [ ! -f base/$PACKAGE ] && {
			echo -e "BG_BLACK";
			echo -e "\n${FG_RED}================================================================================"
			echo -e "${FG_RED}= ERROR${FG_GREEN}: Could not find srcipt (${FG_CYAN}$PACKAGE${FG_GREEN}).";
			echo -e "${FG_RED}================================================================================${FG_GREEN}\n"
		} || {
			[ "`is_installed base/$PACKAGE`" == "1" ] && { PROP=$((0|$INSTALLED)); } || { PROP=0; ERR_CODE=0; } 
			source ./base/$PACKAGE 2> ../logs/$PACKAGE.err | tee ../logs/$PACKAGE.log;
			[ "$ERR_CODE" != "0" ] && { echo -e "Package (${FG_CYAN}$PACKAGE${FG_GREEN}) finished with errors.\n" >> ../logs/packages.err; }
		}
		[ "$(basename $0)" != "installer" ] && break; 
	done

	[ "$EXTRAS" == "3" ] && {
		[ -f extras ] && source extras;
	}

	[ "$(basename $0)" == "installer" ] && finalise
}

[ -f $SCRIPTS ] && rm -rf $SCRIPTS

s=$[$(date +%s) - $start_time]; h=$[$s / 3600]; s=$[$s - $[$h * 3600]]; m=$[$s / 60]; s=$[$s - $[m * 60]]
[ "$h" != '0' ] && hours=" ${FG_YELLOW}${h}${FG_GREEN} hours" || hours=""
[ "$m" != '0' ] && minutes=" ${FG_YELLOW}${m}${FG_GREEN} minutes and" || minutes=""

echo -e "${FG_BLUE}==============================================================================="
echo -e "${FG_BLUE}= ${FG_GREEN} Finish runtime${hours}${minutes} ${FG_YELLOW}${s}${FG_GREEN} seconds."
echo -e "${FG_BLUE}===============================================================================${FG_GREEN}\n\n"
echo 
